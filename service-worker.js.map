{"mappings":"MAAO,IAAIA,EAAW,GACXC,EAAU,GAInBD,ECJe,CAAC,0BAA0B,6BAA6B,iDAAiD,qCAAqC,iDAAiD,iDAAiD,iDAAiD,iDAAiD,iDAAiD,iDAAiD,iDAAiD,mDAAmD,mDAAmD,sDAAsD,0DAA0D,kEAAkE,0DAA0D,uDAAuD,mDDK73BC,ECJc,4BCEhB,MAAMC,EAAS,aAAgBD,IAM/BE,KAAKC,iBAAiB,WAAYC,GAAMA,EAAEC,UAJ7BC,WACT,MAAMC,QAAcC,OAAOC,KAAKR,SAC1BM,EAAMG,OAAOX,IAE6BY,MASpDT,KAAKC,iBAAiB,YAAaC,GAAMA,EAAEC,UAP7BC,WACV,MAAMM,QAAaJ,OAAOI,aACpBC,QAAQC,IAAIF,EAAKG,KAAIC,IACvB,GAAIA,IAAQf,EACZ,OAAOO,OAAOS,OAAOD,QAGwBE,MAErDhB,KAAKC,iBAAiB,SAAUC","sources":["node_modules/@parcel/service-worker/service-worker.js","node_modules/@parcel/service-worker/runtime-c685fafea0c614d7.js","src/service-worker.ts"],"sourcesContent":["export let manifest = [];\nexport let version = '';\n\n// Called by the runtime.\nexport function _register(m, v) {\n  manifest = m;\n  version = v;\n}\n","import {_register} from '@parcel/service-worker';\nconst manifest = [\"/tap-to-roll/index.html\",\"/tap-to-roll/icons/512.png\",\"/tap-to-roll/032.03fafadc.png\",\"/tap-to-roll/taptoroll.webmanifest\",\"/tap-to-roll/016.8fde062f.png\",\"/tap-to-roll/064.03cb48cc.png\",\"/tap-to-roll/096.7e948660.png\",\"/tap-to-roll/128.0d0085fe.png\",\"/tap-to-roll/168.266a6276.png\",\"/tap-to-roll/192.d6484057.png\",\"/tap-to-roll/256.044bb46b.png\",\"/tap-to-roll/index.a28ab426.css\",\"/tap-to-roll/index.3bc77439.css\",\"/tap-to-roll/mr-eaves.c381e4a8.otf\",\"/tap-to-roll/scaly-sans.3757d2ba.woff2\",\"/tap-to-roll/scaly-sans-caps-bold.cd98d6a3.otf\",\"/tap-to-roll/bookinsanity.81d8e59d.otf\",\"/tap-to-roll/parchment.d1e52c21.png\",\"/tap-to-roll/index.c0199030.js\"];\nconst version = \"d3778afa\";\n_register(manifest, version);\n","/// <reference lib=\"WebWorker\" />\nimport { manifest, version } from '@parcel/service-worker'\ndeclare const self: ServiceWorkerGlobalScope\n\nconst cacheName = `taptoroll-${version}`\n\nconst install = async () => {\n    const cache = await caches.open(cacheName)\n    await cache.addAll(manifest)\n}\nself.addEventListener('install', (e) => e.waitUntil(install()))\n\nconst activate = async () => {\n    const keys = await caches.keys()\n    await Promise.all(keys.map(key => {\n        if (key === cacheName) return;\n        return caches.delete(key)\n    }))\n}\nself.addEventListener('activate', (e) => e.waitUntil(activate()))\n\nself.addEventListener('fetch', (e) => {\n    \n})\n"],"names":["$2039b88b1be162b9$export$e538f94cc8cf4db8","$2039b88b1be162b9$export$83d89fbfd8236492","$0c81e46209371114$var$cacheName","self","addEventListener","e","waitUntil","async","cache","caches","open","addAll","$0c81e46209371114$var$install","keys","Promise","all","map","key","delete","$0c81e46209371114$var$activate"],"version":3,"file":"service-worker.js.map"}